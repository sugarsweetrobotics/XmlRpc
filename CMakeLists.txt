cmake_minimum_required(VERSION 3.5)

project(XmlRpc LANGUAGES CXX VERSION 0.7.0)

set(CMAKE_USE_RELATIVE_PATHS True)

option(BUILD_TESTS "Build Tests" OFF)
option(XmlRpc_Install "Install XmlRpc" On)

add_subdirectory(include)
add_subdirectory(src)


if (${BUILD_TESTS})
  add_subdirectory(test)
endif ()




set(INCLUDE_INSTALL_DIR include/ )
set(RUNTIME_INSTALL_DIR bin/ )
set(LIB_INSTALL_DIR lib/ )
set(SYSCONFIG_INSTALL_DIR etc/${PROJECT_NAME}/ )

if (XmlRpc_Install)
INSTALL(TARGETS ${PROJECT_NAME}
        RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR}
        LIBRARY DESTINATION ${LIB_INSTALL_DIR}
        PUBLIC_HEADER DESTINATION include/${PROJECT_NAME})

include(CMakePackageConfigHelpers)
configure_package_config_file(cmake/${PROJECT_NAME}Config.cmake.in
  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
  INSTALL_DESTINATION ${LIB_INSTALL_DIR}/${PROJECT_NAME}/cmake
  PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR LIB_INSTALL_DIR)

write_basic_package_version_file(
        ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
        VERSION ${PROJECT_VERSION}
        COMPATIBILITY SameMajorVersion )

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
        ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
  DESTINATION ${LIB_INSTALL_DIR}/${PROJECT_NAME}/cmake )


if (WIN32)
#install(FILES "${CMAKE_CURRENT_BINARY_DIR}/bin/Debug/${PROJECT_NAME}d.dll" "${CMAKE_BINARY_DIR}/lib/Debug/${PROJECT_NAME}d.lib"
#  DESTINATION ${LIB_INSTALL_DIR})
endif (WIN32)



set(CPACK_GENERATOR WIX)
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VENDOR ${PROJECT_VENDOR})
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${PROJECT_DESCRIPTION})
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_INSTALL_DIRECTORY ${PROJECT_NAME})
SET(CPACK_NSIS_MODIFY_PATH ON)

INCLUDE(CPack)


endif()